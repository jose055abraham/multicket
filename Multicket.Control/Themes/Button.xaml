<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:com="http://schemas.multicket.com/ui/2020"
    xmlns:loc="clr-namespace:Multicket.Module.Components">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Control;component/Themes/Colors.xaml" />
        <ResourceDictionary Source="pack://application:,,,/Control;component/Themes/Icons.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <!--  ============== BUTTON ==============  -->

    <!--  Focus Visual  -->
    <Style x:Key="ButtonFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle
                            Margin="0"
                            Stroke="#60000000"
                            StrokeDashArray="0 0"
                            StrokeThickness="0" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="SimpleButtonTemplate" TargetType="{x:Type Button}">
        <Border
            x:Name="BorderA"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            CornerRadius="2">

            <Border
                x:Name="BorderB"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                CornerRadius="2">

                <ContentPresenter
                    Margin="{TemplateBinding Padding}"
                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />

            </Border>

        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsKeyboardFocused" Value="True">
                <Setter TargetName="BorderA" Property="BorderBrush" Value="{StaticResource DefaultedBorderBrush}" />
            </Trigger>
            <Trigger Property="IsDefaulted" Value="True">
                <Setter TargetName="BorderB" Property="BorderBrush" Value="{StaticResource LightBorderBrush}" />
                <Setter TargetName="BorderA" Property="BorderBrush" Value="Transparent" />
                <Setter TargetName="BorderA" Property="BorderThickness" Value="1" />
                <Setter TargetName="BorderB" Property="BorderThickness" Value="1" />
            </Trigger>
            <Trigger Property="IsDefaulted" Value="False">
                <Setter TargetName="BorderB" Property="BorderBrush" Value="{StaticResource LightBorderBrush}" />
                <Setter TargetName="BorderA" Property="BorderBrush" Value="Transparent" />
                <Setter TargetName="BorderA" Property="BorderThickness" Value="1" />
                <Setter TargetName="BorderB" Property="BorderThickness" Value="1" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="BorderA" Property="Background" Value="{StaticResource NormasBrushBackground}" />
                <Setter TargetName="BorderA" Property="BorderBrush" Value="#BAB9BB" />
                <Setter TargetName="BorderB" Property="BorderBrush" Value="#D8D6D3" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="BorderA" Property="Background" Value="{StaticResource PressedBrush}" />
                <Setter TargetName="BorderA" Property="BorderBrush" Value="{StaticResource LightBorderBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="BorderA" Property="Background" Value="{StaticResource DisabledBackgroundBrush}" />
                <Setter TargetName="BorderB" Property="BorderBrush" Value="Transparent" />
                <Setter TargetName="BorderA" Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}" />
                <Setter TargetName="BorderA" Property="BorderThickness" Value="1" />
                <Setter TargetName="BorderB" Property="BorderThickness" Value="1" />
                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--  Button Style  -->
    <Style TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}" />
        <Setter Property="Foreground" Value="{StaticResource TextForegroundBrush}" />
        <Setter Property="Background" Value="{StaticResource NormasBrushBackground}" />
        <!--  NormalBrush  -->
        <Setter Property="BorderBrush" Value="{StaticResource LightBorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template" Value="{StaticResource SimpleButtonTemplate}" />
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect
                    BlurRadius="2"
                    Opacity="0.1"
                    ShadowDepth="0"
                    Color="LightGray" />
            </Setter.Value>
        </Setter>
    </Style>

    <!--  ================== GROUPBUTTON ===============  -->

    <ControlTemplate x:Key="SimpleGroupButtonTemplate" TargetType="{x:Type RadioButton}">
        <Border
            x:Name="BorderA"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            CornerRadius="2">

            <Border
                x:Name="BorderB"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                CornerRadius="2">

                <ContentPresenter
                    Margin="{TemplateBinding Padding}"
                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />

            </Border>

        </Border>

        <ControlTemplate.Triggers>
            <Trigger Property="IsKeyboardFocused" Value="True">
                <Setter TargetName="BorderA" Property="BorderBrush" Value="{StaticResource DefaultedBorderBrush}" />
            </Trigger>
            <Trigger Property="Button.IsDefaulted" Value="True">
                <Setter TargetName="BorderB" Property="BorderBrush" Value="{StaticResource LightBorderBrush}" />
                <Setter TargetName="BorderA" Property="BorderBrush" Value="Transparent" />
                <Setter TargetName="BorderA" Property="BorderThickness" Value="1" />
                <Setter TargetName="BorderB" Property="BorderThickness" Value="1" />
            </Trigger>
            <Trigger Property="Button.IsDefaulted" Value="False">
                <Setter TargetName="BorderB" Property="BorderBrush" Value="{StaticResource LightBorderBrush}" />
                <Setter TargetName="BorderA" Property="BorderBrush" Value="Transparent" />
                <Setter TargetName="BorderA" Property="BorderThickness" Value="1" />
                <Setter TargetName="BorderB" Property="BorderThickness" Value="1" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="BorderA" Property="Background" Value="{StaticResource NormasBrushBackground}" />
                <Setter TargetName="BorderA" Property="BorderBrush" Value="#BAB9BB" />
                <Setter TargetName="BorderB" Property="BorderBrush" Value="#D8D6D3" />

            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="BorderA" Property="Background" Value="{StaticResource PressedBrush}" />
                <Setter TargetName="BorderA" Property="BorderBrush" Value="{StaticResource LightBorderBrush}" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="BorderA" Property="Background" Value="{StaticResource DisabledBackgroundBrush}" />
                <Setter TargetName="BorderB" Property="BorderBrush" Value="Transparent" />
                <!--  D8D6D3  -->
                <Setter TargetName="BorderA" Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}" />
                <Setter TargetName="BorderA" Property="BorderThickness" Value="1" />
                <Setter TargetName="BorderB" Property="BorderThickness" Value="1" />
                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
                <Setter Property="TextBox.Foreground" Value="{StaticResource DisabledForegroundBrush}" />
                <!--  Indigo  -->
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--  Button Style  -->
    <Style x:Key="GroupButton" TargetType="{x:Type RadioButton}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}" />
        <Setter Property="Foreground" Value="{StaticResource TextForegroundBrush}" />
        <Setter Property="Background" Value="{StaticResource NormasBrushBackground}" />
        <!--  NormalBrush  -->
        <Setter Property="BorderBrush" Value="{StaticResource LightBorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template" Value="{StaticResource SimpleGroupButtonTemplate}" />
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect
                    BlurRadius="2"
                    Opacity="0.1"
                    ShadowDepth="0"
                    Color="LightGray" />
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="OnButtonTemplate" TargetType="{x:Type Button}">
        <Border
            x:Name="BorderA"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            CornerRadius="2">

            <Border
                x:Name="BorderB"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                CornerRadius="2">

                <ContentPresenter
                    Margin="{TemplateBinding Padding}"
                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />

            </Border>

        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsKeyboardFocused" Value="True">
                <Setter Property="Background" Value="{StaticResource OnBrushBackground}" />
            </Trigger>
            <Trigger Property="Button.IsDefaulted" Value="True">
                <Setter TargetName="BorderB" Property="BorderBrush" Value="Transparent" />
                <Setter TargetName="BorderA" Property="BorderBrush" Value="{StaticResource OnNormalBorderBrush}" />
                <Setter TargetName="BorderA" Property="BorderThickness" Value="1" />
                <Setter TargetName="BorderB" Property="BorderThickness" Value="1" />
            </Trigger>
            <Trigger Property="Button.IsDefaulted" Value="False">
                <Setter TargetName="BorderB" Property="BorderBrush" Value="Transparent" />
                <Setter TargetName="BorderA" Property="BorderBrush" Value="{StaticResource OnNormalBorderBrush}" />
                <Setter TargetName="BorderA" Property="BorderThickness" Value="1" />
                <Setter TargetName="BorderB" Property="BorderThickness" Value="1" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="BorderA" Property="Background" Value="{StaticResource OnPressedBorderBrush}" />
                <Setter TargetName="BorderA" Property="BorderBrush" Value="{StaticResource OnNormalBorderBrush}" />
                <Setter TargetName="BorderB" Property="BorderBrush" Value="{StaticResource OnLightBorderBrush}" />
                <Setter TargetName="BorderA" Property="BorderThickness" Value="1" />
                <Setter TargetName="BorderB" Property="BorderThickness" Value="1" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="BorderA" Property="Background" Value="{StaticResource PressedBrush}" />
                <Setter TargetName="BorderA" Property="BorderBrush" Value="{StaticResource LightBorderBrush}" />
                <Setter Property="Focusable" Value="True" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="BorderA" Property="Background" Value="{StaticResource DisabledBackgroundBrush}" />
                <Setter TargetName="BorderB" Property="BorderBrush" Value="Transparent" />
                <!--  D8D6D3  -->
                <Setter TargetName="BorderA" Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}" />
                <Setter TargetName="BorderA" Property="BorderThickness" Value="1" />
                <Setter TargetName="BorderB" Property="BorderThickness" Value="1" />
                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
                <!--  Indigo  -->
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="OnButton" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}" />
        <Setter Property="Foreground" Value="{StaticResource TextForegroundBrush}" />
        <Setter Property="Background" Value="{StaticResource OnBrushBackground}" />
        <!--  NormalBrush  -->
        <Setter Property="BorderBrush" Value="{StaticResource OnNormalBorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template" Value="{StaticResource OnButtonTemplate}" />
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect
                    BlurRadius="2"
                    Opacity="0.1"
                    ShadowDepth="0"
                    Color="LightGray" />
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="BarCode" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Panel.ZIndex" Value="8" />
        <Setter Property="Cursor" Value="Help" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="btnNull">
                        <Image Source="{StaticResource barcode}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>




</ResourceDictionary>